# Login Page Test Cases

Welcome to the **Login Page Test Cases**! This document contains a detailed collection of test cases for testing a login page's functionality, security, and usability. The test cases are categorized for better readability and efficiency.

---

## üìÇ Test Cases Overview

| **ID** | **Test Case**                                                                                                    | **Type**       | **Expected Result**                                                                                           | **Priority** |
|--------|----------------------------------------------------------------------------------------------------------------|---------------|---------------------------------------------------------------------------------------------------------------|--------------|
| 1      | Verify that cursor is focused on ‚ÄúUsername‚Äù text box on the page load (login page).                            | Positive      | Cursor is focused on the "Username" field immediately after the page is loaded.                              | High         |
| 2      | Verify that the login screen contains all required elements (Username, Password, Sign-in button, etc.).         | Positive      | All elements are present and displayed correctly.                                                             | High         |
| 3      | Verify tab functionality across all input fields.                                                             | Positive      | Tab moves focus sequentially across elements in the correct order.                                           | Medium       |
| 4      | Verify that Enter key works as a substitute for the Sign-in button.                                           | Positive      | Pressing Enter submits the form.                                                                              | High         |
| 5      | Verify that Username and Password fields have a valid placeholder.                                            | Positive      | Placeholder text is present and provides useful guidance to the user.                                         | Medium       |
| 6      | Verify that labels float upward when the text field is in focus or filled (if floating labels are used).       | Positive      | Labels move upward and remain visible when the field is in focus or filled.                                   | Medium       |
| 7      | Verify that User can log in with valid credentials.                                                           | Positive      | User is successfully logged in and redirected to the home page.                                               | High         |
| 8      | Verify that User cannot log in with invalid Username and Password.                                            | Negative      | User sees an appropriate error message.                                                                       | High         |
| 9      | Verify that User cannot log in with a valid Username and invalid Password.                                    | Negative      | User sees an error message like "Invalid Password."                                                           | High         |
| 10     | Verify that User cannot log in with invalid Username and valid Password.                                      | Negative      | User sees an error message like "User does not exist."                                                        | High         |
| 11     | Verify that User cannot log in with blank Username or Password fields.                                        | Negative      | Validation message is displayed (e.g., "Username and Password cannot be blank").                              | High         |
| 12     | Verify that User cannot log in with spaces as Username or Password.                                           | Negative      | Spaces are not accepted as valid input.                                                                       | High         |
| 13     | Verify that User cannot log in with inactive credentials.                                                     | Negative      | User sees an error message indicating that their account is inactive.                                         | High         |
| 14     | Verify that clicking the browser back button after a successful login does not log the User out.              | Negative      | User remains logged in.                                                                                       | Medium       |
| 15     | Verify that clicking the browser back button after a successful logout does not log the User back in.         | Negative      | User remains logged out.                                                                                      | Medium       |
| 16     | Verify the limit on the number of unsuccessful login attempts before lockout (depends on business logic).      | Negative      | After X invalid attempts, the User is either blocked or asked to complete CAPTCHA verification.               | High         |
| 17     | Verify that the password is displayed as encrypted (masked) when entered.                                     | Positive      | Characters in the Password field are replaced with dots or asterisks.                                         | High         |
| 18     | Verify that passwords cannot be deciphered if copied from the Password field.                                 | Positive      | Copy-pasted passwords remain encrypted.                                                                       | High         |
| 19     | Verify that the login page is not vulnerable to SQL injection attacks.                                        | Negative      | SQL injection attempts are blocked, and an appropriate error is displayed.                                    | Critical     |
| 20     | Verify that the login page is not vulnerable to Cross-Site Scripting (XSS).                                   | Negative      | XSS scripts are blocked, and no malicious content is executed.                                                | Critical     |
| 21     | Verify the behavior of the "Remember Me" checkbox (default state depends on business logic).                  | Positive      | Checkbox is either selected or unselected by default, as per the business requirement.                        | Medium       |
| 22     | Verify that CAPTCHA functionality works (case sensitivity, refresh, audio support).                           | Positive      | CAPTCHA works as intended: refreshes, supports audio, and validates user input.                               | High         |
| 23     | Verify that the login form functions correctly across different browsers and devices.                         | Positive      | No rendering issues across browsers (Chrome, Firefox, Safari, etc.) and mobile devices.                       | High         |
| 24     | Verify that the page source of the login form does not reveal sensitive information.                          | Negative      | No sensitive data (e.g., database structure, API keys) is visible in the page source.                         | High         |

---

## üí° Improvements Added
- Enhanced organization by including IDs, priorities, and expected results.
- Added security-related test cases (SQL Injection, XSS, sensitive information in page source).
- Expanded UX/UI tests with placeholder validation, floating labels, and browser compatibility checks.
- Included CAPTCHA testing with case sensitivity, audio support, and refresh functionality.
- Structured the test cases to cover functional, negative, and security aspects systematically.

---

## üìÑ How to Use
1. Clone the repository:
   ```bash
   git clone https://github.com/YourUsername/YourRepo.git
